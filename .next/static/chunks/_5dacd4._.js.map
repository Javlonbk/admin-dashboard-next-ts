{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///media/javlonbek/New%20Volume/nextjs_dashboard/app/lib/actions.ts"],"sourcesContent":["'use server'\n\nimport { z } from 'zod'\nimport { sql } from '@vercel/postgres'\nimport { revalidatePath } from 'next/cache'\nimport { redirect } from 'next/navigation'\nconst FormScheme = z.object({\n    id: z.string(),\n    customerId: z.string(),\n    amount: z.coerce.number(),\n    status: z.enum(['pending', 'paid']),\n    date: z.string()\n})\n\nconst CreateInvoice = FormScheme.omit({ id: true, date: true })\nexport async function createInvoice(formData: FormData) {\n    const { customerId, amount, status } = CreateInvoice.parse({\n        customerId: formData.get('customerId'),\n        amount: formData.get('amount'),\n        status: formData.get('status'),\n    });\n    const amountInCents = amount * 100;\n    const date = new Date().toISOString().split('T')[0];\n\n    await sql`\n    INSERT INTO invoices(customer_id, amount, status, date)\n    VALUES(${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n    \n    revalidatePath('/dashboard/invoices');\n    redirect('/dashboard/invoices');\n}\n\n\n\nconst UpdateInvoice = FormScheme.omit({ id: true, date: true }); \nexport async function updateInvoice(id: string, formData: FormData) {\n  const { customerId, amount, status } = UpdateInvoice.parse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n \n  const amountInCents = amount * 100;\n \n  await sql`\n    UPDATE invoices\n    SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n    WHERE id = ${id}\n  `;\n \n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}"],"names":[],"mappings":";;;;;;IAesB;IAqBA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///media/javlonbek/New%20Volume/nextjs_dashboard/app/ui/invoices/edit-form.tsx"],"sourcesContent":["'use client';\n\nimport { CustomerField, InvoiceForm } from '@/app/lib/definitions';\nimport {\n  CheckIcon,\n  ClockIcon,\n  CurrencyDollarIcon,\n  UserCircleIcon,\n} from '@heroicons/react/24/outline';\nimport Link from 'next/link';\nimport { Button } from '@/app/ui/button';\nimport { updateInvoice } from '@/app/lib/actions';\n\nexport default function EditInvoiceForm({\n  invoice,\n  customers,\n}: {\n  invoice: InvoiceForm;\n  customers: CustomerField[];\n}) {\n  const updateInvoiceWithId = updateInvoice.bind(null, invoice.id);\n \n  return <form action={updateInvoiceWithId}></form>;\n}\n\n"],"names":[],"mappings":";;;;AAWA;AAXA;;;AAae,SAAS,gBAAgB,EACtC,OAAO,EACP,SAAS,EAIV;IACC,MAAM,sBAAsB,wHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,MAAM,QAAQ,EAAE;IAE/D,qBAAO,4TAAC;QAAK,QAAQ;;;;;;AACvB;KAVwB"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///media/javlonbek/New%20Volume/nextjs_dashboard/node_modules/.pnpm/next%4015.0.3_react-dom%4018.2.0_react%4018.2.0__react%4018.2.0/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;AAYrBG,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ;;;;;;;;;;;;;;;;;IAdLN,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,wRAI2C,EAC7CA,qBAAqB","ignoreList":[0]}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}